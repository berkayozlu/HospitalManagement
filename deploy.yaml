apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: server
  name: server
spec:
  type: NodePort
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: server
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: mysqldb
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysqldb
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/yaml-springmysql-net: "true"
        io.kompose.service: mysqldb
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: hospital
            - name: MYSQL_PASSWORD
              value: test
            - name: MYSQL_ROOT_PASSWORD
              value: test
            - name: MYSQL_USER
              value: notroot
          image: mysql:8.0
          name: mysqldb
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: server
  name: server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/yaml-springmysql-net: "true"
        io.kompose.service: server
    spec:
      containers:
        - env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysqldb:3306/hospital"
            - name: SPRING_DATASOURCE_USERNAME
              value: notroot
            - name: SPRING_DATASOURCE_PASSWORD
              value: test
            - name: SPRING_THYMELEAF_CACHE
              value: "false"
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
              value: org.hibernate.dialect.MySQL8Dialect
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: DEBUG
              value: "true"
            - name: SERVER_ADDRESS
              value: "0.0.0.0"
            - name: SERVER_PORT
              value: "8080"
          image: hospital
          name: server
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          resources: {}
      restartPolicy: Always
status: {}
